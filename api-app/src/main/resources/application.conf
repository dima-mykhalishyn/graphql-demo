akka {
  loglevel = "INFO"
  loglevel = ${?AKKA_LOG_LEVEL}
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  cluster {
    seed-nodes = []
    seed-nodes = ${?SEED_NODES}
    seed-node-timeout = 180s
    seed-node-timeout = ${?SEED_NODE_TIMEOUT}
    retry-unsuccessful-join-after = 120s
    retry-unsuccessful-join-after = ${?RETRY_SEED_NODE_TIMEOUT}
    roles = [v1]
    roles = ${?CLUSTER_ROLES}

    failure-detector {
      acceptable-heartbeat-pause = 5 s
      threshold = 12.0
    }

    split-brain-resolver {
        stable-after = 30s
    }
  }

  # graceful shutdown on SIGTERM
  coordinated-shutdown.run-by-jvm-shutdown-hook = on

  cluster.downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  #cluster.shutdown-after-unsuccessful-join-seed-nodes = 180s

  actor {
    allow-java-serialization = off
    provider = "akka.cluster.ClusterActorRefProvider"
    serialization-bindings {
      "com.google.protobuf.GeneratedMessageV3": proto
    }

  }

  remote {
    maximum-payload-bytes = 15 MiB
    log-remote-lifecycle-events = on
    artery {
      enabled = on
      bind {
        hostname = 0.0.0.0
        hostname = ${?AKKA_REMOTING_BIND_HOST}
      }
      canonical {
        hostname = 127.0.0.1
        hostname = ${?HOSTNAME}
        port = 2551
        port = ${?PORT}
      }
      advanced {
        maximum-frame-size = 15 MiB
        maximum-large-frame-size = 15 MiB
      }
    }
  }
}
